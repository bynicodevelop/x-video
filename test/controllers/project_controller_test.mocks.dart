// Mocks generated by Mockito 5.4.4 from annotations
// in x_video_ai/test/controllers/project_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_riverpod/flutter_riverpod.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:state_notifier/state_notifier.dart' as _i7;
import 'package:x_video_ai/controllers/config_controller.dart' as _i2;
import 'package:x_video_ai/models/project_model.dart' as _i6;
import 'package:x_video_ai/services/config_service.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ConfigController].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigController extends _i1.Mock implements _i2.ConfigController {
  MockConfigController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onError(_i3.ErrorListener? _onError) => super.noSuchMethod(
        Invocation.setter(
          #onError,
          _onError,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
      ) as bool);

  @override
  _i4.Stream<_i5.ConfigService<_i6.ProjectModel>?> get stream =>
      (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i5.ConfigService<_i6.ProjectModel>?>.empty(),
      ) as _i4.Stream<_i5.ConfigService<_i6.ProjectModel>?>);

  @override
  set state(_i5.ConfigService<_i6.ProjectModel>? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void loadConfiguration({required String? path}) => super.noSuchMethod(
        Invocation.method(
          #loadConfiguration,
          [],
          {#path: path},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void initConfiguration({
    required String? path,
    required String? name,
    required _i6.ProjectModel? model,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #initConfiguration,
          [],
          {
            #path: path,
            #name: name,
            #model: model,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> create() => (super.noSuchMethod(
        Invocation.method(
          #create,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> update(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  bool updateShouldNotify(
    _i5.ConfigService<_i6.ProjectModel>? old,
    _i5.ConfigService<_i6.ProjectModel>? current,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            old,
            current,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i3.RemoveListener addListener(
    _i7.Listener<_i5.ConfigService<_i6.ProjectModel>?>? listener, {
    bool? fireImmediately = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
          {#fireImmediately: fireImmediately},
        ),
        returnValue: () {},
      ) as _i3.RemoveListener);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
